<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd

                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">


    <!-- 激活自动代理功能 -->
    <!-- <aop:aspectj-autoproxy/> -->
    <!-- proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。如果proxy-target-class 属性值被设置为true，
        那么基于类的代理将起作用（这时需要cglib库）。如果proxy-target-class属值被设置为false或者这个属性被省略， 那么标准的JDK
        基于接口的代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 可以扫描controller、service、... 这里让扫描controller，指定controller的包 -->
    <context:component-scan base-package="ecloud.com.controller"></context:component-scan>
    <context:component-scan base-package="ecloud.com.base.shiro.web.controller"></context:component-scan>
    <context:component-scan base-package="ecloud.com.webocket"/>
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
    <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/html;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <bean id="fastJsonHttpMessageConverter"
          class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
        <property name="fastJsonConfig">
            <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
                <property name="serializerFeatures">
                    <array>
                        <!--此配置用于将Date类型转化为dateFormat对应的格式-->
                        <value>WriteDateUseDateFormat</value>
                    </array>
                </property>
            </bean>
        </property>
        <property name="supportedMediaTypes">
            <list>
                <!-- 这里顺序一定不能反，一定先写text/html,否则IE下出现下载提示 -->
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!-- 使用 mvc:annotation-driven代替注解映射器和注解适配器配置 mvc:annotation-driven默认加载很多的参数绑定方法，
        比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
        实际开发时使用mvc:annotation-driven -->
    <!--<mvc:annotation-driven></mvc:annotation-driven>-->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="ecloud.com.base.shiro.web.bind.method.CurrentUserMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    <!-- 采用默认的方式处理静态资源 -->
    <mvc:default-servlet-handler/>

    <!-- <mvc:resources mapping="/css/**" location="/css/"/> <mvc:resources
        mapping="/images/**" location="/img/"/> <mvc:resources mapping="/js/**" location="/js/"/> -->

    <!-- 如果当前请求为“/”时，则转发到“/helloworld/index" -->
    <mvc:view-controller path="/" view-name="forward:/user/index"/>

    <!-- 视图解析器 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置jsp路径的前缀 -->
        <property name="prefix" value="/WEB-INF/web/"/>
        <!-- 配置jsp路径的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean class="ecloud.com.base.exception.SpringMVCSimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="redirect:/login/index.htm"/>
    </bean>
    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <bean class="ecloud.com.base.Interceptor.PrintParamsInterceptor"/>
        <!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
    </mvc:interceptors>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- 引入redis缓存配置 -->
    <!-- 	<import resource="classpath:config/spring/spring-redis.xml" /> -->

</beans>